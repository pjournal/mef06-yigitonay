data("warpbreaks")
boxplot(warpbreaks)$out
knitr::opts_chunk$set(echo = TRUE)
install.packages(lubridate)
library(lubridate)
install.packages("tidyverse")
library(lubridate)
detach("package:lubridate", unload = TRUE)
library(lubridate)
library("lubridate")
library(tidyverse)
library(tidyverse)
clear
pwd
install.packages("nycflights13")
install.packages("tidyverse")
library(nycflights13)
library(tidyverse)
install.packages("tidyverse")
library(lubridate)
install.packages("lubridate")
install.packages("lubridate")
library(tidyverse)
library(lubridate)
raw_df <- readRDS("rp_201801_202005_df.rds")
print(raw_df, n=3)
raw_df %>% glimpse()
glimpse(raw_df)
raw_df %>% select(dt, wind_lic)
raw_df %>% rename(date_time = dt)
raw_df %>% select(date_time, wind_lic:others_lic)
raw_df %>% select(date_time = dt, wind_lic:others_lic)
raw_df %>% select(-starts_with("wind_"))
raw_df %>% mutate(lubridate::year(dt))
raw_df
raw_df_w <- raw_df %>% mutate(lubridate::year(dt))
raw_df_w
raw_df %>% mutate(lubridate::year(dt)) %>% group_by(year)
raw_df %>% mutate(lubridate::year(dt)) %>% group_by(year)
raw_df %>%
mutate(lubridate::year(dt)) %>%
group_by(year) %>%
raw_df %>% mutate(lubridate::year(dt)) %>% group_by(year)
library(tidyverse)
library(lubridate)
raw_df <- readRDS("rp_201801_202005_df.rds")
print(raw_df, n=3)
raw_df %>% glimpse()
raw_df %>% select(dt, wind_lic)
raw_df %>% rename(date_time = dt)
raw_df %>% select(date_time = dt, wind_lic:others_lic)
raw_df %>% select(-starts_with("wind_"))
raw_df %>% mutate(lubridate::year(dt)) %>% group_by(year)
raw_df %>% select(-starts_with("wind_"))
raw_df %>% mutate(lubridate::year(dt)) %>% group_by(year(dt))
raw_df %>% mutate(year = lubridate::year(dt)) %>% group_by(year)
raw_df %>% mutate(year = lubridate::year(dt))
raw_df %>% mutate(year = lubridate::year(dt), geothermal_lic)
raw_df %>% mutate(year = lubridate::year(dt), geothermal_lic)
raw_df %>% group_by(year = lubridate::year(dt), geothermal_lic)
raw_df %>% group_by(year = lubridate::year(dt))
raw_df %>% select(dt, geothermal_lic) %>% group_by(year = lubridate::year(dt))
raw_df %>% select(dt, geothermal_lic) %>% group_by(year = lubridate::year(dt))
raw_df %>% glimpse()
raw_df %>% group_by(year = lubridate::year(dt))
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo = mean(geothermal_lic))
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo = mean(geothermal_lic, na.rm=TRUE))
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic, geo_std = sd(geothermal_lic) na.rm=TRUE)) #Exercise_1
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic, geo_std = sd(geothermal_lic) na.rm=TRUE))
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic, geo_std = sd(geothermal_lic), na.rm=TRUE))
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic, geo_std = sd(geothermal_lic))
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic, geo_std = sd(geothermal_lic))
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic)
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic)
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic))
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic), geo_std = sd(geothermal_lic))
#Find the hourly average unlicensed solar (sun_ul) production levels for May 2020.
raw_df
#Find the hourly average unlicensed solar (sun_ul) production levels for May 2020.
raw_df %>% select(sun_ul)
#Find the hourly average unlicensed solar (sun_ul) production levels for May 2020.
raw_df %>% mutate(month = lubridate::month(dt))
#Find the hourly average unlicensed solar (sun_ul) production levels for May 2020.
raw_df %>% mutate(month = lubridate::month(dt), year = lubridate::year(dt)) %>% filter
#Find the hourly average unlicensed solar (sun_ul) production levels for May 2020.
raw_df %>% mutate(month = lubridate::month(dt), year = lubridate::year(dt)) %>% filter(month == 5 & year == 2020)
raw_df %>%
mutate(month = lubridate::month(dt), year = lubridate::year(dt)) %>%
filter(month == 5 & year == 2020) %>%
group_by(month) %>%
summarize(sun_mean = mean(sun_ul))
raw_df %>%
mutate(month = lubridate::month(dt), year = lubridate::year(dt), hour = lubridate::hour(dt)) %>%
filter(month == 5 & year == 2020) %>%
group_by(hour) %>%
summarize(sun_mean = mean(sun_ul))
raw_df %>%
mutate(month = lubridate::month(dt), year = lubridate::year(dt), hour = lubridate::hour(dt)) %>%
filter(month == 5 & year == 2020) %>%
group_by(hour) %>%
summarize(sun_mean = round(mean(sun_ul), 2))
#Find the average daily percentage change of licensed biomass (biomass_lic) in 2019.
#(e.g. Suppose daily production is 50 in day 1 and 53 in day 2, then the change should be (53-50)/50 -1 = 0.06)
#(Tip: Use lubridate::as_date to convert date time to date. Use lag and lead functions to offset values.)
#Find the yearly total production levels in TWh (Current values are in MWh. 1 GWh is 1000 MWh and 1 TWh is 1000 GWh).
#(Tip: In order to avoid a lengthy summation you can use tidyr::pivot_longer to get a long format.)
raw_df %>%
mutate(month = lubridate::month(dt), year = lubridate::year(dt), hour = lubridate::hour(dt)) %>%
filter(month == 5 & year == 2020) %>%
group_by(hour) %>%
summarize(sun_mean = round(mean(sun_ul), 2))
raw_df
print(raw_df, n=100)
raw_df %>%
transmute(dt, date = lubridate::as_date(dt), biomass_lic
raw_df %>%
%>%
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic)
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic, biomass_lic_prev = lead(biomass_lic))
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic)
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(sum(biomass_lic)
raw_df %>%
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic))
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_prev = lead(biomass_lic))
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_prev = lead(biomass_daily))
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily))
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1))
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1)) %>%
summarize(average_change = mean(percent_change))
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1)) %>%
summarize(average_change = mean(percent_change, rm.na = NA))
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1)) %>%
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1)) %>%
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1))
raw_df <- readRDS("rp_201801_202005_df.rds")
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1))
length(raw_df)
row_number(raw_df)
nrow(raw_df)
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1)) %>%
slice(2:882)
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1)) %>%
slice(2:882) %>%
summarize(mean(percent_change))
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)%>%
sum()
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)%>%
filter(is_numeric()
raw_df %>%
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)%>%
filter(is_numeric)
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)%>%
filter(is_numeric)
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)%>%
sum(is_numeric)
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)%>%
sum(where(is.numeric))
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)%>%
sum(is.numeric)
raw_df %>%
mutate(year = lubridate::year(dt))%>%
group_by(year)%>%
sum(is.numeric())
raw_df %>%
transmute(sum = rowSums(across(where(is.numeric))), dt)
raw_df %>%
transmute(sum = rowSums(across(where(is.numeric))), year = lubridate::year(dt))
raw_df %>%
transmute(sum = rowSums(across(where(is.numeric))), year = lubridate::year(dt)) %>%
groupby(year)%>%
summarize(sum(sum))
raw_df %>%
transmute(sum = rowSums(across(where(is.numeric))), year = lubridate::year(dt)) %>%
group_by(year)%>%
summarize(sum(sum))
raw_df %>%
transmute(sum = rowSums(across(where(is.numeric))), year = lubridate::year(dt)) %>%
group_by(year)%>%
summarize(total_Mwh = sum(sum))%>%
transmute(year, total_Twh = total_Mwh / 1000000)
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1)) %>%
slice(2:882) %>%
summarize(mean(percent_change))
#4_Find the yearly total production levels in TWh (Current values are in MWh. 1 GWh is 1000 MWh and 1 TWh is 1000 GWh).
#(Tip: In order to avoid a lengthy summation you can use tidyr::pivot_longer to get a long format.)
raw_df %>%
transmute(sum = rowSums(across(where(is.numeric))), year = lubridate::year(dt)) %>%
group_by(year)%>%
summarize(total_Mwh = sum(sum))%>%
transmute(year, total_Twh = total_Mwh / 1000000)
raw_df <- readRDS("rp_201801_202005_df.rds")
print(raw_df, n=3)
#1_Find the mean and standard deviation of licensed geothermal productions in all years.
#(Tip: Use lubridate::year to get years from date data.)
raw_df %>% group_by(year = lubridate::year(dt)) %>% summarize(geo_mean = mean(geothermal_lic), geo_std = sd(geothermal_lic))
#2_Find the hourly average unlicensed solar (sun_ul) production levels for May 2020.
raw_df %>%
mutate(month = lubridate::month(dt), year = lubridate::year(dt), hour = lubridate::hour(dt)) %>%
filter(month == 5 & year == 2020) %>%
group_by(hour) %>%
summarize(sun_mean = round(mean(sun_ul), 2))
#3_Find the average daily percentage change of licensed biomass (biomass_lic) in 2019.
#(e.g. Suppose daily production is 50 in day 1 and 53 in day 2, then the change should be (53-50)/50 -1 = 0.06)
#(Tip: Use lubridate::as_date to convert date time to date. Use lag and lead functions to offset values.)
raw_df %>%
transmute(date = lubridate::as_date(dt), biomass_lic) %>%
group_by(date) %>%
summarize(biomass_daily = sum(biomass_lic)) %>%
mutate(biomass_lic_next = lag(biomass_daily), percent_change = (biomass_daily / biomass_lic_next -1)) %>%
slice(2:882) %>%
summarize(mean(percent_change))
#4_Find the yearly total production levels in TWh (Current values are in MWh. 1 GWh is 1000 MWh and 1 TWh is 1000 GWh).
#(Tip: In order to avoid a lengthy summation you can use tidyr::pivot_longer to get a long format.)
raw_df %>%
transmute(sum = rowSums(across(where(is.numeric))), year = lubridate::year(dt)) %>%
group_by(year)%>%
summarize(total_Mwh = sum(sum))%>%
transmute(year, total_Twh = total_Mwh / 1000000)
library(nycflights13)
library(tidyverse)
?flights
library(nycflights13)
library(tidyverse)
?flights
library(nycflights13)
view(flights)
library(nycflights13)
view(flights)
library(nycflights13)
print(flights, n=3)
library(nycflights13)
flights %>% glimpse()
flights
flights %>%
filter(month==1, day==1)
flights %>%
filter(month==1, day==1)%>%
glimpse()
flights %>%
mutate(speed_per_hour = distance / air_time)
?flights
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(speed_per_hour))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(across(where(is.na(speed_per_hour)))))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(across(where(na.rm(speed_per_hour)))))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(across(where((speed_per_hour))), na.rm = TRUE))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(speed_per_hour, na.rm = TRUE))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(speed_per_hour, na.rm = TRUE))%>%
arrange(desc(.))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(speed_per_hour, na.rm = TRUE))%>%
arrange(desc(.avg_speed.carrier))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(speed_per_hour, na.rm = TRUE))%>%
arrange(desc(avg_speed.carrier))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier = mean(speed_per_hour, na.rm = TRUE))%>%
arrange(desc(avg_speed_carrier))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier_per_hour = mean(speed_per_hour, na.rm = TRUE))%>%
arrange(desc(avg_speed_carrier_per_hour))
flights %>%
mutate(speed_per_hour = (distance / air_time)*60)%>%
group_by(carrier)%>%
summarize(avg_speed_carrier_per_hour = mean(speed_per_hour, na.rm = TRUE))%>%
arrange(desc(avg_speed_carrier_per_hour))%>%
print(.,n=3)
flights %>%
group_by(carrier)%>%
summarize(avg_delay = mean(dep_delay))
flights %>%
group_by(carrier)%>%
summarize(avg_delay = mean(dep_delay, na.rm = TRUE))
flights %>%
group_by(carrier)%>%
summarize(avg_delay = mean(dep_delay, na.rm = TRUE))%>%
arrange(desc(avg_delay))
flights %>%
group_by(origin)%>%
summarize(avg_delay_airport = mean(dep_delay, na.rm = TRUE))%>%
arrange(desc(avg_delay_airport))
flights %>%
group_by(origin)%>%
summarize(avg_delay_airport = mean(dep_delay))%>%
arrange(desc(avg_delay_airport))
flights %>%
group_by(origin)%>%
summarize(avg_delay_airport = mean(dep_delay, na.rm = TRUE))%>%
arrange(desc(avg_delay_airport))
flights %>%
unique(origin)
flights %>%
distinct(origin)
